import { Analytics } from "@vercel/analytics/react";
import { SpeedInsights } from "@vercel/speed-insights/next";
import type { Metadata } from "next";
import { NextIntlClientProvider } from "next-intl";
import { getLocale, getMessages } from "next-intl/server";
// import { Geist, Geist_Mono } from "next/font/google";

import "@/app/globals.css";
import { AppProvider } from "@/app/provider";
import PublicHeader from "@/entities/public-header/ui/public-header";
import { ThemeProvider } from "@/shared/contexts/theme-provider";
import { Breakpoint } from "@/shared/ui/breakpoint/breakpoint";
import { Toaster } from "@/shared/ui/sonner";

// const geistSans = Geist({
// 	variable: "--font-geist-sans",
// 	subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
// 	variable: "--font-geist-mono",
// 	subsets: ["latin"],
// });

export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

export default async function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	const locale = await getLocale();
	const messages = await getMessages({ locale });

	return (
		<html lang={locale} suppressHydrationWarning>
			<body
			// className={`${geistSans.variable} ${geistMono.variable} antialiased`}
			>
				<ThemeProvider
					attribute="class"
					defaultTheme="system"
					enableSystem
					disableTransitionOnChange
				>
					<NextIntlClientProvider messages={messages}>
						<AppProvider>
							<PublicHeader />
							{children}
							<Toaster visibleToasts={100} />
						</AppProvider>
					</NextIntlClientProvider>
				</ThemeProvider>

				<Breakpoint />
				<Analytics />
				<SpeedInsights />
			</body>
		</html>
	);
}
