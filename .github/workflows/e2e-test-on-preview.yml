name: üåê E2E Test on Preview environment

on:
  # Called after migration and reset
  # NOTE: `workflow_run` cannot be used outside of the default branch
  workflow_call:
    secrets:
      VERCEL_TOKEN:
        required: true
      VERCEL_ORG_ID:
        required: true
      VERCEL_PROJECT_ID:
        required: true

permissions:
  actions: read
  contents: read

jobs:
  e2e-test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    # ------------------------------------
    # Set Vercel environment to .env.local
    # ------------------------------------
    - name: Install Vercel CLI
      run: npm install --global vercel@latest

    - name: Pull Preview Environment Variables to apps/web/.env
      run: vercel env pull apps/web/.env --environment preview --yes --token ${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    - name: Pull Preview Environment Variables to packages/db/.env
      run: vercel env pull packages/db/.env --environment preview --yes --token ${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    # ------------------------------------
    # Build packages using cache
    # ------------------------------------
    - name: Cache Next.js build
      id: cache-build
      uses: actions/cache@v4
      with:
        path: |
          apps/web/.next/cache
          packages/db/dist
        key: build-${{ github.ref_name }}-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
        restore-keys: build-${{ github.ref_name }}-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

    - name: Build db package
      run: pnpm --filter @nito/db build

    - name: Run Build
      run: pnpm --filter @nito/web build

    # ------------------------------------
    # Install Playwright using cache
    # ------------------------------------
    - name: Cache Playwright Browsers
      id: playwright-browsers-cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright/
        key: playwright-browsers-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: playwright-browsers-${{ runner.os }}-

    - name: Install Playwright Browsers
      if: steps.playwright-browsers-cache.outputs.cache-hit != 'true'
      run: pnpm --filter @nito/web exec playwright install --with-deps

    # Install only dependencies
    # Browser installation uses cache, but dependencies must be installed without using cache or the following error occurs
    # `Error: browserType.launch: Target page, context or browser has been closed`
    - name: Install Playwright dependencies
      run: pnpm --filter @nito/web exec playwright install-deps

    # ------------------------------------
    # Run Playwright tests
    # ------------------------------------
    - name: Run Playwright tests
      run: pnpm --filter @nito/web e2e

    # ------------------------------------
    # Upload report
    # ------------------------------------
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: apps/web/playwright-report/
        retention-days: 30
